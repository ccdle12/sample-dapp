{"version":3,"sources":["main.js"],"names":["contract_abidefinition","contract_bytecode","contract_address","contract","filterWatch","window","addEventListener","web3","Web3","currentProvider","console","log","providers","HttpProvider","startApp","isConnected","callMe","updateUI","getNodeVersion","retrieveDeployedContract","startFilter","getMessageFromContract","getLastSentAddress","version","getNode","error","result","eth","at","getMessage","call","setMessageInContract","message","setMessage","sendTransaction","getLastAddress","stopFilter","block","getBlock","MessageWritten","target","fromBlock","toBlock","stopWatching","undefined"],"mappings":";;AACA;;AAEA;;;;;;;AAOA,IAAIA,yBAAyB,CAAC,EAAC,YAAW,KAAZ,EAAkB,UAAS,CAAC,EAAC,QAAO,aAAR,EAAsB,QAAO,QAA7B,EAAD,CAA3B,EAAoE,QAAO,YAA3E,EAAwF,WAAU,EAAlG,EAAqG,WAAU,KAA/G,EAAqH,mBAAkB,YAAvI,EAAoJ,QAAO,UAA3J,EAAD,EAAwK,EAAC,YAAW,KAAZ,EAAkB,UAAS,EAA3B,EAA8B,QAAO,gBAArC,EAAsD,WAAU,CAAC,EAAC,QAAO,EAAR,EAAW,QAAO,SAAlB,EAAD,CAAhE,EAA+F,WAAU,KAAzG,EAA+G,mBAAkB,YAAjI,EAA8I,QAAO,UAArJ,EAAxK,EAAyU,EAAC,YAAW,KAAZ,EAAkB,UAAS,EAA3B,EAA8B,QAAO,YAArC,EAAkD,WAAU,CAAC,EAAC,QAAO,EAAR,EAAW,QAAO,QAAlB,EAAD,CAA5D,EAA0F,WAAU,KAApG,EAA0G,mBAAkB,YAA5H,EAAyI,QAAO,UAAhJ,EAAzU,EAAqe,EAAC,UAAS,CAAC,EAAC,QAAO,aAAR,EAAsB,QAAO,QAA7B,EAAD,CAAV,EAAmD,WAAU,KAA7D,EAAmE,mBAAkB,YAArF,EAAkG,QAAO,aAAzG,EAAre,EAA6lB,EAAC,aAAY,KAAb,EAAmB,UAAS,EAA5B,EAA+B,QAAO,gBAAtC,EAAuD,QAAO,OAA9D,EAA7lB,CAA7B;;AAEA,IAAIC,oBAAoB,g7DAAxB;AACA,IAAIC,mBAAmB,4CAAvB;AACA,IAAIC,QAAJ;AACA,IAAIC,WAAJ;;AAGA;;;AAGAC,OAAOC,gBAAP,CAAwB,MAAxB,EAAgC,YAAW;AACvC;AACA,QAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAC7B;AACAF,eAAOE,IAAP,GAAc,IAAIC,IAAJ,CAASD,KAAKE,eAAd,CAAd;AACAC,gBAAQC,GAAR,CAAY,4BAAZ;AACH,KAJD,MAIO;AACHD,gBAAQC,GAAR,CAAY,gCAAZ;;AAEA;AACA;AACA;AACAN,eAAOE,IAAP,GAAc,IAAIC,IAAJ,CAAS,IAAIA,KAAKI,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAd;AACH;;AAED;AACA;AACAC;AACH,CAlBD;;AAqBA;;;AAGA,SAASA,QAAT,GAAoB;;AAEhB,QAAIP,QAAQA,KAAKQ,WAAL,EAAZ,EAAgC;AAC5B;AACAL,gBAAQC,GAAR,CAAY,oBAAZ;;AAEA;AACAK;;AAEA;AACAC,iBAAS,gBAAT,EAA2B,WAA3B,EAAwC,KAAxC;AACH;;AAEDC;AACAC;AACAC;AACAC,2BAAuBlB,QAAvB;AACAmB;AACH;;AAED;;;;AAIA,SAASJ,cAAT,GAA0B;AACtBX,SAAKgB,OAAL,CAAaC,OAAb,CAAqB,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACzC,YAAID,KAAJ,EAAWf,QAAQC,GAAR,CAAY,yBAAyBc,KAArC,EAAX,KACK;AACDf,oBAAQC,GAAR,CAAY,yBAAyBe,MAArC;AACH;AACJ,KALD;AAMH;;AAID;;;AAGA,SAASP,wBAAT,GAAoC;AAChC;AACAhB,eAAWI,KAAKoB,GAAL,CAASxB,QAAT,CAAkBH,sBAAlB,EAA0C4B,EAA1C,CAA6C1B,gBAA7C,CAAX;AACH;;AAED,SAASmB,sBAAT,CAAgClB,QAAhC,EAA0C;AACtCO,YAAQC,GAAR,CAAY,+BAAZ;AACAR,aAAS0B,UAAT,CAAoBC,IAApB,CAAyB,UAASL,KAAT,EAAgBC,MAAhB,EAAwB;AAC7C,YAAID,KAAJ,EAAW;AACPf,oBAAQC,GAAR,CAAY,oBAAZ;AACAM,qBAAS,aAAT,EAAwB,oBAAxB,EAA8C,IAA9C;AACH,SAHD,MAGO;AACHA,qBAAS,aAAT,EAAwBS,MAAxB,EAAgC,KAAhC;AACAhB,oBAAQC,GAAR,CAAY,iCAAZ;AACAD,oBAAQC,GAAR,CAAYe,MAAZ;;AAEAJ;AACH;AACJ,KAXD;AAYH;;AAED,SAASS,oBAAT,CAA8BC,OAA9B,EAAuC;AACnC7B,aAAS8B,UAAT,CAAoBC,eAApB,CAAoCF,OAApC,EAA6C,UAASP,KAAT,EAAgBC,MAAhB,EAAwB;AACjE,YAAID,KAAJ,EAAW;AACPf,oBAAQC,GAAR,CAAYc,KAAZ;AACH,SAFD,MAGK;AACDf,oBAAQC,GAAR,CAAY,yBAAZ;AACAD,oBAAQC,GAAR,CAAYe,MAAZ;AACAN;AACH;AACJ,KATD;AAUH;;AAED,SAASE,kBAAT,GAA8B;AAC1BZ,YAAQC,GAAR,CAAY,+BAAZ;AACAR,aAASgC,cAAT,CAAwBL,IAAxB,CAA6B,UAASL,KAAT,EAAgBC,MAAhB,EAAwB;AACjD,YAAID,KAAJ,EAAW;AACPf,oBAAQC,GAAR,CAAY,oBAAZ;AACAM,qBAAS,cAAT,EAAyB,oBAAzB,EAA+C,KAA/C;AACH,SAHD,MAIK;AACDA,qBAAS,cAAT,EAAyBS,MAAzB,EAAiC,KAAjC;AACH;AACJ,KARD;AASH;;AAED;;;AAGA,SAASN,WAAT,GAAuB;AACnBgB;;AAEA;AACA,QAAIC,QAAQ9B,KAAKoB,GAAL,CAASW,QAAT,CAAkB,QAAlB,EAA4B,UAASb,KAAT,EAAgBC,MAAhB,EAAwB;;AAE5D,YAAID,KAAJ,EAAW,CAAE,CAAb,MACK;;AAED;AACArB,0BAAcD,SAASoC,cAAT,CAAwB,EAACC,QAAQ,gBAAT,EAAxB,EAAoD,EAACC,WAAUJ,QAAQ,CAAnB,EAAsBK,SAAQ,QAA9B,EAApD,CAAd;AACAhC,oBAAQC,GAAR,CAAYP,WAAZ;;AAEAM,oBAAQC,GAAR,CAAY,yBAAZ;;AAEA,gBAAGc,KAAH,EAAU;AACNf,wBAAQe,KAAR,CAAc,sBAAd,EAAqCA,KAArC;AACH,aAFD,MAGK;AACDf,wBAAQC,GAAR,CAAY,iBAAZ;AACAD,wBAAQC,GAAR,CAAYe,MAAZ;AACAL,uCAAuBlB,QAAvB;AACH;AACJ;AAEJ,KArBW,CAAZ;AAwBH;;AAED,SAASiC,UAAT,GAAsB;AAClB,QAAIhC,WAAJ,EAAiB;AACbA,oBAAYuC,YAAZ;AACAvC,sBAAcwC,SAAd;AACH;AACJ","file":"main.js","sourcesContent":["\n// var utils = './utils/js';\n\n/**\n * Bytescode / Interface generated through build of contract\n * \n * \n * \n * \n */\nvar contract_abidefinition = [{\"constant\":false,\"inputs\":[{\"name\":\"sentMessage\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getLastAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initMessage\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MessageWritten\",\"type\":\"event\"}];\n\nvar contract_bytecode = '0x6060604052341561000f57600080fd5b6103b88061001e6000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063368b87721461005c57806371a2ee52146100b9578063ce6d41de1461010e575b600080fd5b341561006757600080fd5b6100b7600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061019c565b005b34156100c457600080fd5b6100cc6101be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011957600080fd5b6101216101e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610161578082015181840152602081019050610146565b50505050905090810190601f16801561018e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b80600090805190602001906101b29291906102d3565b506101bb610290565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f0610353565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b5050505050905090565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061031457805160ff1916838001178555610342565b82800160010185558215610342579182015b82811115610341578251825591602001919060010190610326565b5b50905061034f9190610367565b5090565b602060405190810160405280600081525090565b61038991905b8082111561038557600081600090555060010161036d565b5090565b905600a165627a7a723058201654084eb29c7bd7dfb2af0af716064014a036a42e256c97a2a5307b4d85b9290029';\nvar contract_address = '0x532ce9f107fa383cbc6e3c72aab0cd603c152d64';\nvar contract;\nvar filterWatch;\n\n\n/**\n * Web page load listener\n */\nwindow.addEventListener('load', function() {\n    //Is web3 injected by meta mask?\n    if (typeof web3 !== 'undefined') {\n        //Use web3 provided by metamask\n        window.web3 = new Web3(web3.currentProvider);\n        console.log(\"Web 3 provided by metamask\");\n    } else {\n        console.log(\"Web 3 NOT injected by metamask\");\n\n        //Use web3 from local node\n        //Only if a geth or testrpc node is running?\n        //CURRENTLY ONLY WORKS WITH METAMASK\n        window.web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    }\n\n    // Star the app using web3\n    //CURRENTLY ONLY WORKS WITH METAMASK\n    startApp();\n});\n\n\n/**\n * Function that kicks off the app\n */\nfunction startApp() {\n\n    if (web3 && web3.isConnected()) {\n        //Testing if we can log print\n        console.log(\"Web 3 is connected\");\n\n        //Testing if we can use utils.js\n        callMe();\n\n        //Testing if we can update the UI\n        updateUI('connect_status', 'Connected', false);\n    }\n\n    getNodeVersion();\n    retrieveDeployedContract();\n    startFilter();\n    getMessageFromContract(contract);\n    getLastSentAddress();\n}\n\n/**\n * Function to understand web3 api\n */\n\nfunction getNodeVersion() {\n    web3.version.getNode(function(error, result) {\n        if (error) console.log(\"There was an error: \" + error);\n        else {\n            console.log(\"There was a result: \" + result);\n        }\n    });\n}\n\n\n\n/**\n * Functions to interact with deployed contract\n */\nfunction retrieveDeployedContract() {\n    // Retrieved the contract from the local geth node\n    contract = web3.eth.contract(contract_abidefinition).at(contract_address);\n}\n\nfunction getMessageFromContract(contract) {\n    console.log(\"Getting message from contract\");\n    contract.getMessage.call(function(error, result) {\n        if (error) {\n            console.log(\"There was an error\");\n            updateUI('message_set', \"There was an error\", true);\n        } else {\n            updateUI('message_set', result, false);\n            console.log(\"Updated UI message successfully\"); \n            console.log(result);\n\n            getLastSentAddress();\n        }\n    });\n}\n\nfunction setMessageInContract(message) {\n    contract.setMessage.sendTransaction(message, function(error, result) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            console.log('Now printing the reuslt')\n            console.log(result);\n            startFilter();\n        }\n    });\n}\n\nfunction getLastSentAddress() {\n    console.log(\"Calling get last sent address\")\n    contract.getLastAddress.call(function(error, result) {\n        if (error) {\n            console.log(\"There was an error\");\n            updateUI('last_address', \"There was an error\", false);\n        }\n        else {\n            updateUI('last_address', result, false);\n        }\n    });\n}\n\n/**\n * Filters for monitoring change in deployed contract state\n */\nfunction startFilter() {\n    stopFilter();\n\n    //Get the latest block number\n    var block = web3.eth.getBlock('latest', function(error, result) {\n \n        if (error) {}\n        else {\n            \n            // Watch for event from latest block - 1 to latest block\n            filterWatch = contract.MessageWritten({target: 'MessageWritten'}, {fromBlock:block - 1, toBlock:'latest'});\n            console.log(filterWatch);\n\n            console.log(\"Setting the filterWatch\");\n\n            if(error) {\n                console.error('Filter Watch Error: ',error);\n            }\n            else {\n                console.log(\"Filter result: \");\n                console.log(result);\n                getMessageFromContract(contract);\n            }\n        }\n\n    })\n\n    \n}\n\nfunction stopFilter() {\n    if (filterWatch) {\n        filterWatch.stopWatching();\n        filterWatch = undefined;\n    }\n}\n\n"]}